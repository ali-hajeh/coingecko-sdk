// This file is auto-generated by @hey-api/openapi-ts

export type Ping = {
    gecko_says?: string;
};

export type Key = {
    plan?: string;
    rate_limit_request_per_minute?: number;
    monthly_call_credit?: number;
    current_total_monthly_calls?: number;
    current_remaining_monthly_calls?: number;
};

export type SimplePrice = {
    /**
     * price in USD
     */
    usd?: number;
    /**
     * market cap in USD
     */
    usd_market_cap?: number;
    /**
     * 24h volume in USD
     */
    usd_24h_vol?: number;
    /**
     * 24h change in USD
     */
    usd_24h_change?: number;
    /**
     * last updated timestamp
     */
    last_updated_at?: number;
};

export type CurrencyList = Array<(string)>;

export type CoinsList = Array<{
    /**
     * coin id
     */
    id?: string;
    /**
     * coin symbol
     */
    symbol?: string;
    /**
     * coin name
     */
    name?: string;
    /**
     * coin asset platform and contract address
     */
    platforms?: {
        [key: string]: (string);
    };
}>;

export type TopGainersLosers = Array<{
    /**
     * coin id
     */
    id?: string;
    /**
     * coin symbol
     */
    symbol?: string;
    /**
     * coin name
     */
    name?: string;
    /**
     * coin image url
     */
    image?: string;
    /**
     * coin rank by market cap
     */
    market_cap_rank?: number;
    /**
     * coin price in USD
     */
    usd?: number;
    /**
     * coin 24h volume in USD
     */
    usd_24h_vol?: number;
    /**
     * coin 1 year change in USD
     */
    usd_1y_change?: number;
}>;

export type CoinsListNew = Array<{
    /**
     * coin id
     */
    id?: string;
    /**
     * coin symbol
     */
    symbol?: string;
    /**
     * coin name
     */
    name?: string;
    /**
     * timestamp when coin was activated on CoinGecko
     */
    activated_at?: number;
}>;

export type CoinsMarkets = {
    /**
     * coin id
     */
    id?: string;
    /**
     * coin symbol
     */
    symbol?: string;
    /**
     * coin name
     */
    name?: string;
    /**
     * coin image url
     */
    image?: string;
    /**
     * coin current price in currency
     */
    current_price?: number;
    /**
     * coin market cap in currency
     */
    market_cap?: number;
    /**
     * coin rank by market cap
     */
    market_cap_rank?: number;
    /**
     * coin fully diluted valuation (fdv) in currency
     */
    fully_diluted_valuation?: number;
    /**
     * coin total trading volume in currency
     */
    total_volume?: number;
    /**
     * coin 24h price high in currency
     */
    high_24h?: number;
    /**
     * coin 24h price low in currency
     */
    low_24h?: number;
    /**
     * coin 24h price change in currency
     */
    price_change_24h?: number;
    /**
     * coin 24h price change in percentage
     */
    price_change_percentage_24h?: number;
    /**
     * coin 24h market cap change in currency
     */
    market_cap_change_24h?: number;
    /**
     * coin 24h market cap change in percentage
     */
    market_cap_change_percentage_24h?: number;
    /**
     * coin circulating supply
     */
    circulating_supply?: number;
    /**
     * coin total supply
     */
    total_supply?: number;
    /**
     * coin max supply
     */
    max_supply?: number;
    /**
     * coin all time high (ath) in currency
     */
    ath?: number;
    /**
     * coin all time high (ath) change in percentage
     */
    ath_change_percentage?: number;
    /**
     * coin all time high (ath) date
     */
    ath_date?: string;
    /**
     * coin all time low (atl) in currency
     */
    atl?: number;
    /**
     * coin all time low (atl) change in percentage
     */
    atl_change_percentage?: number;
    /**
     * coin all time low (atl) date
     */
    atl_date?: string;
    roi?: string;
    /**
     * coin last updated timestamp
     */
    last_updated?: string;
    /**
     * coin 1h price change in percentage
     */
    price_change_percentage_1h?: number;
    /**
     * coin price sparkline in 7 days
     */
    sparkline_in_7d?: {
        price?: Array<(number)>;
    };
};

export type CoinsDataBase = {
    /**
     * coin id
     */
    id?: string;
    /**
     * coin symbol
     */
    symbol?: string;
    /**
     * coin name
     */
    name?: string;
    /**
     * coin web slug
     */
    web_slug?: string;
    /**
     * coin asset platform id
     */
    asset_platform_id?: string;
    /**
     * coin asset platform and contract address
     */
    platforms?: {
        [key: string]: (string);
    };
    /**
     * detailed coin asset platform and contract address
     */
    detail_platforms?: {
        [key: string]: (string);
    };
    /**
     * blockchain block time in minutes
     */
    block_time_in_minutes?: number;
    /**
     * blockchain hashing algorithm
     */
    hashing_algorithm?: string;
    /**
     * coin categories
     */
    categories?: Array<(string)>;
    /**
     * preview listing coin
     */
    preview_listing?: boolean;
    /**
     * public notice
     */
    public_notice?: string;
    /**
     * additional notices
     */
    additional_notices?: Array<(string)>;
    /**
     * coin name localization
     */
    localization?: {
        [key: string]: (string);
    };
    /**
     * coin description
     */
    description?: {
        [key: string]: (string);
    };
    /**
     * links
     */
    links?: {
        /**
         * coin website url
         */
        homepage?: Array<(string)>;
        /**
         * coin whitepaper url
         */
        whitepaper?: Array<(string)>;
        /**
         * coin block explorer url
         */
        blockchain_site?: Array<(string)>;
        /**
         * coin official forum url
         */
        official_forum_url?: Array<(string)>;
        /**
         * coin chat url
         */
        chat_url?: Array<(string)>;
        /**
         * coin announcement url
         */
        announcement_url?: Array<(string)>;
        /**
         * coin twitter handle
         */
        twitter_screen_name?: string;
        /**
         * coin facebook username
         */
        facebook_username?: string;
        /**
         * coin bitcointalk thread identifier
         */
        bitcointalk_thread_identifier?: string;
        /**
         * coin telegram channel identifier
         */
        telegram_channel_identifier?: string;
        /**
         * coin subreddit url
         */
        subreddit_url?: string;
        /**
         * coin repository url
         */
        repos_url?: {
            /**
             * coin github repository url
             */
            github?: Array<(string)>;
            /**
             * coin bitbucket repository url
             */
            bitbucket?: Array<(string)>;
        };
    };
    /**
     * coin image url
     */
    image?: {
        thumb?: string;
        small?: string;
        large?: string;
    };
    /**
     * coin country of origin
     */
    country_origin?: string;
    /**
     * coin genesis date
     */
    genesis_date?: string;
    /**
     * coin sentiment votes up percentage
     */
    sentiment_votes_up_percentage?: number;
    /**
     * coin sentiment votes down percentage
     */
    sentiment_votes_down_percentage?: number;
    /**
     * coin rank by market cap
     */
    market_cap_rank?: number;
    /**
     * coin market data
     */
    market_data?: {
        /**
         * coin current price in currency
         */
        current_price?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * total value locked
         */
        total_value_locked?: number;
        /**
         * market cap to total value locked ratio
         */
        mcap_to_tvl_ratio?: number;
        /**
         * fully diluted valuation to total value locked ratio
         */
        fdv_to_tvl_ratio?: number;
        /**
         * coin return on investment
         */
        roi?: number;
        /**
         * coin all time high (ath) in currency
         */
        ath?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin all time high (ath) change in percentage
         */
        ath_change_percentage?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin all time high (ath) date
         */
        ath_date?: {
            btc?: string;
            eur?: string;
            usd?: string;
        };
        /**
         * coin all time low (atl) in currency
         */
        atl?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin all time low (atl) change in percentage
         */
        atl_change_percentage?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin all time low (atl) date
         */
        atl_date?: {
            btc?: string;
            eur?: string;
            usd?: string;
        };
        /**
         * coin market cap in currency
         */
        market_cap?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin rank by market cap
         */
        market_cap_rank?: number;
        /**
         * coin fully diluted valuation (fdv) in currency
         */
        fully_diluted_valuation?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * market cap to fully diluted valuation ratio
         */
        market_cap_fdv_ratio?: number;
        /**
         * coin total trading volume in currency
         */
        total_volume?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 24h price high in currency
         */
        high_24h?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 24h price low in currency
         */
        low_24h?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 24h price change in currency
         */
        price_change_24h?: number;
        /**
         * coin 24h price change in percentage
         */
        price_change_percentage_24h?: number;
        /**
         * coin 7d price change in percentage
         */
        price_change_percentage_7d?: number;
        /**
         * coin 14d price change in percentage
         */
        price_change_percentage_14d?: number;
        /**
         * coin 30d price change in percentage
         */
        price_change_percentage_30d?: number;
        /**
         * coin 60d price change in percentage
         */
        price_change_percentage_60d?: number;
        /**
         * coin 200d price change in percentage
         */
        price_change_percentage_200d?: number;
        /**
         * coin 1y price change in percentage
         */
        price_change_percentage_1y?: number;
        /**
         * coin 24h market cap change in currency
         */
        market_cap_change_24h?: number;
        /**
         * coin 24h market cap change in percentage
         */
        market_cap_change_percentage_24h?: number;
        /**
         * coin 1h price change in currency
         */
        price_change_percentage_1h_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 24h price change in currency
         */
        price_change_percentage_24h_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 7d price change in currency
         */
        price_change_percentage_7d_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 14d price change in currency
         */
        price_change_percentage_14d_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 30d price change in currency
         */
        price_change_percentage_30d_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 60d price change in currency
         */
        price_change_percentage_60d_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 200d price change in currency
         */
        price_change_percentage_200d_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 1y price change in currency
         */
        price_change_percentage_1y_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 24h market cap change in currency
         */
        market_cap_change_24h_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin 24h market cap change in percentage
         */
        market_cap_change_percentage_24h_in_currency?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin total supply
         */
        total_supply?: number;
        /**
         * coin max supply
         */
        max_supply?: number;
        /**
         * coin circulating supply
         */
        circulating_supply?: number;
        /**
         * coin market data last updated timestamp
         */
        last_updated?: string;
    };
    /**
     * coin community data
     */
    community_data?: {
        /**
         * coin facebook likes
         */
        facebook_likes?: number;
        /**
         * coin twitter followers
         */
        twitter_followers?: number;
        /**
         * coin reddit average posts in 48 hours
         */
        reddit_average_posts_48h?: number;
        /**
         * coin reddit average comments in 48 hours
         */
        reddit_average_comments_48h?: number;
        /**
         * coin reddit subscribers
         */
        reddit_subscribers?: number;
        /**
         * coin reddit active accounts in 48 hours
         */
        reddit_accounts_active_48h?: number;
        /**
         * coin telegram channel user count
         */
        telegram_channel_user_count?: number;
    };
    /**
     * coin developer data
     */
    developer_data?: {
        /**
         * coin repository forks
         */
        forks?: number;
        /**
         * coin repository stars
         */
        stars?: number;
        /**
         * coin repository subscribers
         */
        subscribers?: number;
        /**
         * coin repository total issues
         */
        total_issues?: number;
        /**
         * coin repository closed issues
         */
        closed_issues?: number;
        /**
         * coin repository pull requests merged
         */
        pull_requests_merged?: number;
        /**
         * coin repository pull request contributors
         */
        pull_request_contributors?: number;
        /**
         * coin code additions and deletions in 4 weeks
         */
        code_additions_deletions_4_weeks?: {
            additions?: number;
            deletions?: number;
        };
        /**
         * coin repository commit count in 4 weeks
         */
        commit_count_4_weeks?: number;
        /**
         * coin repository last 4 weeks commit activity series
         */
        last_4_weeks_commit_activity_series?: Array<(number)>;
    };
    /**
     * coin status updates
     */
    status_updates?: Array<{
        [key: string]: unknown;
    }>;
    /**
     * coin last updated timestamp
     */
    last_updated?: string;
    /**
     * coin tickers
     */
    tickers?: Array<{
        /**
         * coin ticker base currency
         */
        base?: string;
        /**
         * coin ticker target currency
         */
        target?: string;
        /**
         * coin ticker exchange
         */
        market?: {
            /**
             * coin ticker exchange name
             */
            name?: string;
            /**
             * coin ticker exchange identifier
             */
            identifier?: string;
            /**
             * coin ticker exchange trading incentive
             */
            has_trading_incentive?: boolean;
        };
        /**
         * coin ticker last price
         */
        last?: number;
        /**
         * coin ticker volume
         */
        volume?: number;
        /**
         * coin ticker converted last price
         */
        converted_last?: {
            btc?: number;
            eth?: number;
            usd?: number;
        };
        /**
         * coin ticker converted volume
         */
        converted_volume?: {
            btc?: number;
            eth?: number;
            usd?: number;
        };
        /**
         * coin ticker trust score
         */
        trust_score?: string;
        /**
         * coin ticker bid ask spread percentage
         */
        bid_ask_spread_percentage?: number;
        /**
         * coin ticker timestamp
         */
        timestamp?: string;
        /**
         * coin ticker last traded timestamp
         */
        last_traded_at?: string;
        /**
         * coin ticker last fetch timestamp
         */
        last_fetch_at?: string;
        /**
         * coin ticker anomaly
         */
        is_anomaly?: boolean;
        /**
         * coin ticker stale
         */
        is_stale?: boolean;
        /**
         * coin ticker trade url
         */
        trade_url?: string;
        /**
         * coin ticker token info url
         */
        token_info_url?: string;
        /**
         * coin ticker base currency coin id
         */
        coin_id?: string;
        /**
         * coin ticker target currency coin id
         */
        target_coin_id?: string;
    }>;
};

export type CoinsID = CoinsDataBase & unknown;

export type CoinsTickers = {
    /**
     * coin name
     */
    name?: string;
    /**
     * list of tickers
     */
    tickers?: Array<{
        /**
         * coin ticker base currency
         */
        base?: string;
        /**
         * coin ticker target currency
         */
        target?: string;
        /**
         * coin ticker exchange
         */
        market?: {
            /**
             * exchange name
             */
            name: string;
            /**
             * exchange identifier
             */
            identifier: string;
            /**
             * exchange trading incentive
             */
            has_trading_incentive: boolean;
            /**
             * exchange image url
             */
            logo?: string;
        };
        /**
         * coin ticker last price
         */
        last?: number;
        /**
         * coin ticker volume
         */
        volume?: number;
        /**
         * coin ticker cost to move up in usd
         */
        cost_to_move_up_usd?: number;
        /**
         * coin ticker cost to move down in usd
         */
        cost_to_move_down_usd?: number;
        /**
         * coin ticker converted last price
         */
        converted_last?: {
            btc?: number;
            eth?: number;
            usd?: number;
        };
        /**
         * coin ticker converted volume
         */
        converted_volume?: {
            btc?: number;
            eth?: number;
            usd?: number;
        };
        /**
         * coin ticker trust score
         */
        trust_score?: string;
        /**
         * coin ticker bid ask spread percentage
         */
        bid_ask_spread_percentage?: number;
        /**
         * coin ticker timestamp
         */
        timestamp?: string;
        /**
         * coin ticker last traded timestamp
         */
        last_traded_at?: string;
        /**
         * coin ticker last fetch timestamp
         */
        last_fetch_at?: string;
        /**
         * coin ticker anomaly
         */
        is_anomaly?: boolean;
        /**
         * coin ticker stale
         */
        is_stale?: boolean;
        /**
         * coin ticker trade url
         */
        trade_url?: string;
        /**
         * coin ticker token info url
         */
        token_info_url?: (string) | null;
        /**
         * coin ticker base currency coin id
         */
        coin_id?: string;
        /**
         * coin ticker target currency coin id
         */
        target_coin_id?: string;
    }>;
};

export type CoinsHistoricalData = {
    /**
     * coin id
     */
    id?: string;
    /**
     * coin symbol
     */
    symbol?: string;
    /**
     * coin name
     */
    name?: string;
    /**
     * coin localization
     */
    localization?: {
        [key: string]: (string);
    };
    /**
     * coin image url
     */
    image?: {
        thumb?: string;
        small?: string;
    };
    /**
     * coin market data
     */
    market_data?: {
        /**
         * coin current price
         */
        current_price?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin market cap
         */
        market_cap?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
        /**
         * coin total volume
         */
        total_volume?: {
            btc?: number;
            eur?: number;
            usd?: number;
        };
    };
    /**
     * coin community data
     */
    community_data?: {
        /**
         * coin facebook likes
         */
        facebook_likes?: number;
        /**
         * coin twitter followers
         */
        twitter_followers?: number;
        /**
         * coin reddit average posts 48h
         */
        reddit_average_posts_48h?: number;
        /**
         * coin reddit average comments 48h
         */
        reddit_average_comments_48h?: number;
        /**
         * coin reddit subscribers
         */
        reddit_subscribers?: number;
        /**
         * coin reddit accounts active 48h
         */
        reddit_accounts_active_48h?: number;
    };
    /**
     * coin developer data
     */
    developer_data?: {
        /**
         * coin repository forks
         */
        forks?: number;
        /**
         * coin repository stars
         */
        stars?: number;
        /**
         * coin repository subscribers
         */
        subscribers?: number;
        /**
         * coin repository total issues
         */
        total_issues?: number;
        /**
         * coin repository closed issues
         */
        closed_issues?: number;
        /**
         * coin repository pull requests merged
         */
        pull_requests_merged?: number;
        /**
         * coin repository pull request contributors
         */
        pull_request_contributors?: number;
        /**
         * coin code additions deletions 4 weeks
         */
        code_additions_deletions_4_weeks?: {
            additions?: number;
            deletions?: number;
        };
        /**
         * coin commit count 4 weeks
         */
        commit_count_4_weeks?: number;
    };
    /**
     * coin public interest stats
     */
    public_interest_stats?: {
        /**
         * coin alexa rank
         */
        alexa_rank?: number;
        /**
         * coin bing matches
         */
        bing_matches?: number;
    };
};

export type CoinsMarketChart = {
    prices?: Array<Array<(number)>>;
    market_caps?: Array<Array<(number)>>;
    total_volumes?: Array<Array<(number)>>;
};

export type CoinsMarketChartRange = {
    prices?: Array<Array<(number)>>;
    market_caps?: Array<Array<(number)>>;
    total_volumes?: Array<Array<(number)>>;
};

export type CoinsOHLC = Array<Array<(number)>>;

export type SupplyChartBase = Array<Array<(number)>>;

export type CoinsContractAddress = CoinsDataBase & unknown;

export type AssetPlatforms = {
    /**
     * asset platform id
     */
    id?: string;
    /**
     * chainlist's chain id
     */
    chain_identifier?: (number) | null;
    /**
     * chain name
     */
    name?: string;
    /**
     * chain shortname
     */
    shortname?: string;
    /**
     * chain native coin id
     */
    native_coin_id?: string;
};

export type TokenLists = {
    name?: string;
    logoURI?: string;
    keywords?: Array<(string)>;
    timestamp?: string;
    tokens?: Array<{
        /**
         * chainlist's chain id
         */
        chainId?: number;
        /**
         * token contract address
         */
        address?: string;
        /**
         * token name
         */
        name?: string;
        /**
         * token symbol
         */
        symbol?: string;
        /**
         * token decimals
         */
        decimals?: number;
        /**
         * token image url
         */
        logoURI?: string;
    }>;
};

export type CategoriesList = {
    /**
     * category id
     */
    category_id?: string;
    /**
     * category name
     */
    name?: string;
};

export type Categories = {
    /**
     * category id
     */
    id?: string;
    /**
     * category name
     */
    name?: string;
    /**
     * category market cap
     */
    market_cap?: number;
    /**
     * category market cap change in 24 hours
     */
    market_cap_change_24h?: number;
    /**
     * category description
     */
    content?: string;
    /**
     * top 3 coins in the category
     */
    top_3_coins?: Array<(string)>;
    /**
     * category volume in 24 hours
     */
    volume_24h?: number;
    /**
     * category last updated time
     */
    updated_at?: string;
};

export type Exchanges = {
    /**
     * exchange id
     */
    id?: string;
    /**
     * exchange name
     */
    name?: string;
    /**
     * exchange established year
     */
    year_established?: number;
    /**
     * exchange country
     */
    country?: string;
    /**
     * exchange description
     */
    description?: string;
    /**
     * exchange website url
     */
    url?: string;
    /**
     * exchange image url
     */
    image?: string;
    /**
     * exchange trading incentive
     */
    has_trading_incentive?: boolean;
    /**
     * exchange trust score
     */
    trust_score?: number;
    /**
     * exchange trust score rank
     */
    trust_score_rank?: number;
    /**
     * exchange trade volume in BTC in 24 hours
     */
    trade_volume_24h_btc?: number;
    /**
     * normalized trading volume by traffic in BTC in 24 hours <br>*refers to [`this blog`](https://blog.coingecko.com/trust-score/).
     */
    trade_volume_24h_btc_normalized?: number;
};

export type ExchangesList = {
    /**
     * exchange id
     */
    id?: string;
    /**
     * exchange name
     */
    name?: string;
};

export type ExchangeData = {
    /**
     * exchange name
     */
    name?: string;
    /**
     * exchange established year
     */
    year_established?: number;
    /**
     * exchange incorporated country
     */
    country?: string;
    /**
     * exchange description
     */
    description?: string;
    /**
     * exchange website url
     */
    url?: string;
    /**
     * exchange image url
     */
    image?: string;
    /**
     * exchange facebook url
     */
    facebook_url?: string;
    /**
     * exchange reddit url
     */
    reddit_url?: string;
    /**
     * exchange telegram url
     */
    telegram_url?: string;
    /**
     * exchange slack url
     */
    slack_url?: string;
    other_url_1?: string;
    other_url_2?: string;
    /**
     * exchange twitter handle
     */
    twitter_handle?: string;
    /**
     * exchange trading incentive
     */
    has_trading_incentive?: boolean;
    /**
     * exchange type (true for centralized, false for decentralized)
     */
    centralized?: boolean;
    /**
     * public notice for exchange
     */
    public_notice?: string;
    /**
     * alert notice for exchange
     */
    alert_notice?: string;
    /**
     * exchange trust score
     */
    trust_score?: number;
    /**
     * exchange trust score rank
     */
    trust_score_rank?: number;
    trade_volume_24h_btc?: number;
    /**
     * normalized trading volume by traffic in BTC in 24 hours <br>*refers to [`this blog`](https://blog.coingecko.com/trust-score/).
     */
    trade_volume_24h_btc_normalized?: number;
    tickers?: Array<(CoinsTickers)>;
};

export type ExchangeTickers = CoinsTickers & unknown;

export type ExchangeVolumeChart = Array<Array<(number)>>;

export type DerivativesTickersList = {
    /**
     * derivative market name
     */
    market?: string;
    /**
     * derivative ticker symbol
     */
    symbol?: string;
    /**
     * derivative underlying asset
     */
    index_id?: string;
    /**
     * derivative ticker price
     */
    price?: string;
    /**
     * derivative ticker price percentage change in 24 hours
     */
    price_percentage_change_24h?: number;
    /**
     * derivative contract type
     */
    contract_type?: string;
    /**
     * derivative underlying asset price
     */
    index?: number;
    /**
     * difference of derivative price and index price
     */
    basis?: number;
    /**
     * derivative bid ask spread
     */
    spread?: number;
    /**
     * derivative funding rate
     */
    funding_rate?: number;
    /**
     * derivative open interest
     */
    open_interest?: number;
    /**
     * derivative volume in 24 hours
     */
    volume_24h?: number;
    /**
     * derivative last updated time
     */
    last_traded_at?: number;
    expired_at?: (string) | null;
};

export type DerivativesExchanges = {
    /**
     * derivatives exchange name
     */
    name?: string;
    /**
     * derivatives exchange id
     */
    id?: string;
    /**
     * derivatives exchange open interest in BTC
     */
    open_interest_btc?: number;
    /**
     * derivatives exchange trade volume in BTC in 24 hours
     */
    trade_volume_24h_btc?: string;
    /**
     * number of perpetual pairs in the derivatives exchange
     */
    number_of_perpetual_pairs?: number;
    /**
     * number of futures pairs in the derivatives exchange
     */
    number_of_futures_pairs?: number;
    /**
     * derivatives exchange image url
     */
    image?: string;
    /**
     * derivatives exchange established year
     */
    year_established?: (number) | null;
    /**
     * derivatives exchange incorporated country
     */
    country?: (string) | null;
    /**
     * derivatives exchange description
     */
    description?: string;
    /**
     * derivatives exchange website url
     */
    url?: string;
};

export type DerivativesExchangesID = {
    /**
     * derivatives exchange name
     */
    name?: string;
    /**
     * derivatives exchange open interest in BTC
     */
    open_interest_btc?: number;
    /**
     * derivatives exchange trade volume in BTC in 24 hours
     */
    trade_volume_24h_btc?: string;
    /**
     * number of perpetual pairs in the derivatives exchange
     */
    number_of_perpetual_pairs?: number;
    /**
     * number of futures pairs in the derivatives exchange
     */
    number_of_futures_pairs?: number;
    /**
     * derivatives exchange image url
     */
    image?: string;
    /**
     * derivatives exchange established year
     */
    year_established?: (number) | null;
    /**
     * derivatives exchange incorporated country
     */
    country?: (string) | null;
    /**
     * derivatives exchange description
     */
    description?: string;
    /**
     * derivatives exchange website url
     */
    url?: string;
    tickers?: Array<DerivativesTickersList>;
};

export type DerivativesExchangesList = {
    /**
     * derivatives exchange id
     */
    id?: string;
    /**
     * derivatives exchange name
     */
    name?: string;
};

export type NFTList = {
    /**
     * nft collection id
     */
    id?: string;
    /**
     * nft collection contract address
     */
    contract_address?: string;
    /**
     * nft collection name
     */
    name?: string;
    /**
     * nft collection asset platform id
     */
    asset_platform_id?: string;
    /**
     * nft collection symbol
     */
    symbol?: string;
};

export type NFTData = {
    /**
     * nft collection id
     */
    id?: string;
    /**
     * nft collection contract address
     */
    contract_address?: string;
    /**
     * nft collection asset platform id
     */
    asset_platform_id?: string;
    /**
     * nft collection name
     */
    name?: string;
    /**
     * nft collection symbol
     */
    symbol?: string;
    /**
     * nft collection image url
     */
    image?: {
        small?: string;
    };
    /**
     * nft collection description
     */
    description?: string;
    /**
     * nft collection native currency
     */
    native_currency?: string;
    /**
     * nft collection native currency symbol
     */
    native_currency_symbol?: string;
    /**
     * nft collection floor price
     */
    floor_price?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection market cap
     */
    market_cap?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection volume in 24 hours
     */
    volume_24h?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection floor price in usd 24 hours percentage change
     */
    floor_price_in_usd_24h_percentage_change?: number;
    floor_price_24h_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection market cap 24 hours percentage change
     */
    market_cap_24h_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection volume in 24 hours percentage change
     */
    volume_24h_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * number of unique address owning the nfts
     */
    number_of_unique_addresses?: number;
    /**
     * number of unique address owning the nfts 24 hours percentage change
     */
    number_of_unique_addresses_24h_percentage_change?: number;
    /**
     * nft collection volume in usd 24 hours percentage change
     */
    volume_in_usd_24h_percentage_change?: number;
    /**
     * nft collection total supply
     */
    total_supply?: number;
    /**
     * nft collection one day sales
     */
    one_day_sales?: number;
    /**
     * nft collection one day sales 24 hours percentage change
     */
    one_day_sales_24h_percentage_change?: number;
    /**
     * nft collection one day average sale price
     */
    one_day_average_sale_price?: number;
    /**
     * nft collection one day average sale price 24 hours percentage change
     */
    one_day_average_sale_price_24h_percentage_change?: number;
    /**
     * nft collection links
     */
    links?: {
        homepage?: string;
        twitter?: string;
        discord?: string;
    };
    /**
     * nft collection floor price 7 days percentage change
     */
    floor_price_7d_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection floor price 14 days percentage change
     */
    floor_price_14d_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection floor price 30 days percentage change
     */
    floor_price_30d_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection floor price 60 days percentage change
     */
    floor_price_60d_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection floor price 1 year percentage change
     */
    floor_price_1y_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection block explorers links
     */
    explorers?: Array<{
        name?: string;
        link?: string;
    }>;
    /**
     * nft collection user favorites count
     */
    user_favorites_count?: number;
    /**
     * nft collection all time highs
     */
    ath?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection all time highs change percentage
     */
    ath_change_percentage?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection all time highs date
     */
    ath_date?: {
        native_currency?: string;
        usd?: string;
    };
};

export type NFTsMarkets = Array<{
    /**
     * nft collection id
     */
    id?: string;
    /**
     * nft collection contract address
     */
    contract_address?: string;
    /**
     * nft collection asset platform id
     */
    asset_platform_id?: string;
    /**
     * nft collection name
     */
    name?: string;
    /**
     * nft collection symbol
     */
    symbol?: string;
    /**
     * nft collection image url
     */
    image?: {
        small?: string;
    };
    /**
     * nft collection description
     */
    description?: string;
    /**
     * nft collection native currency
     */
    native_currency?: string;
    /**
     * nft collection native currency symbol
     */
    native_currency_symbol?: string;
    /**
     * nft collection floor price
     */
    floor_price?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection market cap
     */
    market_cap?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection volume in 24 hours
     */
    volume_24h?: {
        native_currency?: number;
        usd?: number;
    };
    /**
     * nft collection floor price in usd 24 hours percentage change
     */
    floor_price_in_usd_24h_percentage_change?: number;
    /**
     * nft collection floor price 24 hours percentage change
     */
    floor_price_24h_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection market cap 24 hours percentage change
     */
    market_cap_24h_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * nft collection volume in 24 hours percentage change
     */
    volume_24h_percentage_change?: {
        usd?: number;
        native_currency?: number;
    };
    /**
     * number of unique address owning the nfts
     */
    number_of_unique_addresses?: number;
    /**
     * number of unique address owning the nfts 24 hours percentage change
     */
    number_of_unique_addresses_24h_percentage_change?: number;
    /**
     * nft collection volume in usd 24 hours percentage change
     */
    volume_in_usd_24h_percentage_change?: number;
    /**
     * nft collection total supply
     */
    total_supply?: number;
    /**
     * nft collection one day sales
     */
    one_day_sales?: number;
    /**
     * nft collection one day sales 24 hours percentage change
     */
    one_day_sales_24h_percentage_change?: number;
    /**
     * nft collection one day average sale price
     */
    one_day_average_sale_price?: number;
    /**
     * nft collection one day average sale price 24 hours percentage change
     */
    one_day_average_sale_price_24h_percentage_change?: number;
}>;

export type NFTMarketChart = {
    /**
     * nft collection floor price in usd
     */
    floor_price_usd?: Array<Array<(number)>>;
    /**
     * nft collection floor price in native currency
     */
    floor_price_native?: Array<Array<(number)>>;
    /**
     * nft collection volume in 24 hours in usd
     */
    h24_volume_usd?: Array<Array<(number)>>;
    /**
     * nft collection volume in 24 hours in native currency
     */
    h24_volume_native?: Array<Array<(number)>>;
    /**
     * nft collection market cap in usd
     */
    market_cap_usd?: Array<Array<(number)>>;
    /**
     * nft collection market cap in native currency
     */
    market_cap_native?: Array<Array<(number)>>;
};

export type NFTTickers = {
    tickers?: Array<{
        /**
         * nft collection floor price in native currency
         */
        floor_price_in_native_currency?: number;
        /**
         * nft collection volume in 24 hours in native currency
         */
        h24_volume_in_native_currency?: number;
        /**
         * nft collection native currency
         */
        native_currency?: string;
        /**
         * nft collection native currency symbol
         */
        native_currency_symbol?: string;
        /**
         * last updated time
         */
        updated_at?: string;
        /**
         * nft marketplace id
         */
        nft_marketplace_id?: string;
        /**
         * nft marketplace name
         */
        name?: string;
        /**
         * nft marketplace image url
         */
        image?: string;
        /**
         * nft collection url in the nft marketplace
         */
        nft_collection_url?: string;
    }>;
};

export type ExchangeRates = {
    rates?: {
        [key: string]: {
            /**
             * name of the currency
             */
            name?: string;
            /**
             * unit of the currency
             */
            unit?: string;
            /**
             * value of the currency
             */
            value?: number;
            /**
             * type of the currency
             */
            type?: string;
        };
    };
};

export type Search = {
    coins?: Array<{
        /**
         * coin id
         */
        id?: string;
        /**
         * coin name
         */
        name?: string;
        /**
         * coin api symbol
         */
        api_symbol?: string;
        /**
         * coin symbol
         */
        symbol?: string;
        /**
         * coin market cap rank
         */
        market_cap_rank?: number;
        /**
         * coin thumb image url
         */
        thumb?: string;
        /**
         * coin large image url
         */
        large?: string;
    }>;
    exchanges?: Array<{
        /**
         * exchange id
         */
        id?: string;
        /**
         * exchange name
         */
        name?: string;
        /**
         * exchange market type
         */
        market_type?: string;
        /**
         * exchange thumb image url
         */
        thumb?: string;
        /**
         * exchange large image url
         */
        large?: string;
    }>;
    icos?: Array<(string)>;
    categories?: Array<{
        /**
         * category id
         */
        id?: number;
        /**
         * category name
         */
        name?: string;
    }>;
    nfts?: Array<{
        /**
         * nft collection id
         */
        id?: string;
        /**
         * nft name
         */
        name?: string;
        /**
         * nft collection symbol
         */
        symbol?: string;
        /**
         * nft collection thumb image url
         */
        thumb?: string;
    }>;
};

export type TrendingSearch = {
    coins?: Array<{
        /**
         * coin id
         */
        id?: string;
        coin_id?: number;
        /**
         * coin name
         */
        name?: string;
        /**
         * coin symbol
         */
        symbol?: string;
        /**
         * coin market cap rank
         */
        market_cap_rank?: number;
        /**
         * coin thumb image url
         */
        thumb?: string;
        /**
         * coin small image url
         */
        small?: string;
        /**
         * coin large image url
         */
        large?: string;
        /**
         * coin web slug
         */
        slug?: string;
        /**
         * coin price in btc
         */
        price_btc?: number;
        /**
         * coin sequence in the list
         */
        score?: number;
        data?: {
            /**
             * coin price in usd
             */
            price?: number;
            /**
             * coin price in btc
             */
            price_btc?: string;
            /**
             * coin price change percentage in 24 hours
             */
            price_change_percentage_24h?: {
                btc?: number;
                usd?: number;
            };
            /**
             * coin market cap in usd
             */
            market_cap?: string;
            /**
             * coin market cap in btc
             */
            market_cap_btc?: string;
            /**
             * coin total volume in usd
             */
            total_volume?: string;
            /**
             * coin total volume in btc
             */
            total_volume_btc?: string;
            /**
             * coin sparkline image url
             */
            sparkline?: string;
            content?: string;
        };
    }>;
    nfts?: Array<{
        /**
         * nft collection id
         */
        id?: string;
        /**
         * nft collection name
         */
        name?: string;
        /**
         * nft collection symbol
         */
        symbol?: string;
        /**
         * nft collection thumb image url
         */
        thumb?: string;
        nft_contract_id?: number;
        /**
         * nft collection native currency symbol
         */
        native_currency_symbol?: string;
        /**
         * nft collection floor price in native currency
         */
        floor_price_in_native_currency?: number;
        /**
         * nft collection floor price 24 hours percentage change
         */
        floor_price_24h_percentage_change?: number;
        data?: {
            /**
             * nft collection floor price
             */
            floor_price?: string;
            /**
             * nft collection floor price in usd 24 hours percentage change
             */
            floor_price_in_usd_24h_percentage_change?: string;
            /**
             * nft collection volume in 24 hours
             */
            h24_volume?: string;
            /**
             * nft collection 24 hours average sale price
             */
            h24_average_sale_price?: string;
            /**
             * nft collection sparkline image url
             */
            sparkline?: string;
            content?: string;
        };
    }>;
    categories?: Array<{
        id?: number;
        /**
         * category name
         */
        name?: string;
        /**
         * category market cap 1 hour change
         */
        market_cap_1h_change?: number;
        /**
         * category web slug
         */
        slug?: string;
        /**
         * category number of coins
         */
        coins_count?: number;
        data?: {
            /**
             * category market cap
             */
            market_cap?: number;
            /**
             * category market cap in btc
             */
            market_cap_btc?: number;
            /**
             * category total volume
             */
            total_volume?: number;
            /**
             * category total volume in btc
             */
            total_volume_btc?: number;
            /**
             * category market cap change percentage in 24 hours
             */
            market_cap_change_percentage_24h?: {
                btc?: number;
                usd?: number;
            };
            /**
             * category sparkline image url
             */
            sparkline?: string;
        };
    }>;
};

export type Global = {
    data?: {
        /**
         * number of active cryptocurrencies
         */
        active_cryptocurrencies?: number;
        /**
         * number of upcoming icos
         */
        upcoming_icos?: number;
        /**
         * number of ongoing icos
         */
        ongoing_icos?: number;
        /**
         * number of ended icos
         */
        ended_icos?: number;
        /**
         * number of exchanges
         */
        markets?: number;
        /**
         * cryptocurrencies total market cap
         */
        total_market_cap?: {
            btc?: number;
            eth?: number;
        };
        /**
         * cryptocurrencies total volume
         */
        total_volume?: {
            btc?: number;
            eth?: number;
        };
        /**
         * cryptocurrencies market cap percentage
         */
        market_cap_percentage?: {
            btc?: number;
            eth?: number;
        };
    };
    /**
     * cryptocurrencies market cap change percentage in 24 hours in usd
     */
    market_cap_change_percentage_24h_usd?: number;
    updated_at?: number;
};

export type GlobalDeFi = {
    data?: {
        /**
         * defi market cap
         */
        defi_market_cap?: string;
        /**
         * eth market cap
         */
        eth_market_cap?: string;
        /**
         * defi to eth ratio
         */
        defi_to_eth_ratio?: string;
        /**
         * defi trading volume in 24 hours
         */
        trading_volume_24h?: string;
        /**
         * defi dominance
         */
        defi_dominance?: string;
        /**
         * defi top coin name
         */
        top_coin_name?: string;
        /**
         * defi top coin dominance
         */
        top_coin_defi_dominance?: number;
    };
};

export type GlobalMarketCapChart = {
    market_cap_chart?: {
        market_cap?: Array<Array<(number)>>;
    };
};

export type CompaniesTreasury = {
    /**
     * total btc/eth holdings of companies
     */
    total_holdings?: number;
    /**
     * total btc/eth holdings value in usd
     */
    total_value_usd?: number;
    /**
     * market cap dominance
     */
    market_cap_dominance?: number;
    companies?: Array<{
        /**
         * company name
         */
        name?: string;
        /**
         * company symbol
         */
        symbol?: string;
        /**
         * company incorporated country
         */
        country?: string;
        /**
         * total btc/eth holdings of company
         */
        total_holdings?: number;
        /**
         * total entry value in usd
         */
        total_entry_value_usd?: number;
        /**
         * total current value of btc/eth holdings in usd
         */
        total_current_value_usd?: number;
        /**
         * percentage of total btc/eth supply
         */
        percentage_of_total_supply?: number;
    }>;
};

export type SimplePrice1 = {
    data?: {
        id?: string;
        type?: string;
        attributes?: {
            token_prices?: {
                [key: string]: (string);
            };
        };
    };
};

export type NetworksList = {
    links?: {
        first?: string;
        prev?: string;
        next?: string;
        last?: string;
    };
    data?: Array<{
        id?: string;
        type?: string;
        attributes?: {
            name?: string;
            coingecko_asset_platform_id?: string;
        };
    }>;
};

export type DexesList = {
    data?: Array<{
        id?: string;
        type?: string;
        attributes?: {
            name?: string;
        };
    }>;
};

export type Pool = {
    data?: Array<{
        id?: string;
        type?: string;
        attributes?: {
            base_token_price_usd?: string;
            base_token_price_native_currency?: string;
            quote_token_price_usd?: string;
            quote_token_price_native_currency?: string;
            base_token_price_quote_token?: string;
            quote_token_price_base_token?: string;
            address?: string;
            name?: string;
            pool_created_at?: string;
            fdv_usd?: string;
            market_cap_usd?: string;
            price_change_percentage?: {
                m5?: string;
                h1?: string;
                h6?: string;
                h24?: string;
            };
            transactions?: {
                m5?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                m15?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                m30?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                h1?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                h24?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
            };
            volume_usd?: {
                m5?: string;
                h1?: string;
                h6?: string;
                h24?: string;
            };
            reserve_in_usd?: string;
        };
        relationships?: {
            base_token?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
            quote_token?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
            network?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
            dex?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
        };
    }>;
    included?: Array<{
        id?: string;
        type?: string;
        attributes?: {
            address?: string;
            name?: string;
            symbol?: string;
            image_url?: string;
            coingecko_coin_id?: string;
        };
    }>;
};

export type Token = {
    data?: {
        id?: string;
        type?: string;
        attributes?: {
            address?: string;
            name?: string;
            symbol?: string;
            image_url?: string;
            coingecko_coin_id?: string;
            decimals?: number;
            total_supply?: string;
            price_usd?: string;
            fdv_usd?: string;
            total_reserve_in_usd?: string;
            volume_usd?: {
                h24?: string;
            };
            market_cap_usd?: string;
        };
        relationships?: {
            top_pools?: {
                data?: Array<{
                    id?: string;
                    type?: string;
                }>;
            };
        };
    };
    included?: Array<{
        id?: string;
        type?: string;
        attributes?: {
            base_token_price_usd?: string;
            base_token_price_native_currency?: string;
            quote_token_price_usd?: string;
            quote_token_price_native_currency?: string;
            base_token_price_quote_token?: string;
            quote_token_price_base_token?: string;
            address?: string;
            name?: string;
            pool_created_at?: string;
            token_price_usd?: string;
            fdv_usd?: string;
            market_cap_usd?: string;
            price_change_percentage?: {
                m5?: string;
                h1?: string;
                h6?: string;
                h24?: string;
            };
            transactions?: {
                m5?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                m15?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                m30?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                h1?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
                h24?: {
                    buys?: number;
                    sells?: number;
                    buyers?: number;
                    sellers?: number;
                };
            };
            volume_usd?: {
                m5?: string;
                h1?: string;
                h6?: string;
                h24?: string;
            };
            reserve_in_usd?: string;
        };
        relationships?: {
            base_token?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
            quote_token?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
            dex?: {
                data?: {
                    id?: string;
                    type?: string;
                };
            };
        };
    }>;
};

export type TokenInfo = {
    data?: {
        id?: string;
        type?: string;
        attributes?: {
            address?: string;
            name?: string;
            symbol?: string;
            image_url?: string;
            coingecko_coin_id?: string;
            websites?: Array<(string)>;
            description?: string;
            gt_score?: number;
            discord_url?: string;
            telegram_handle?: string;
            twitter_handle?: string;
        };
    };
};

export type PoolTokensInfo = TokenInfo;

export type TokenInfoRecentlyUpdated = TokenInfo;

export type OHLCV = {
    data?: {
        id?: string;
        type?: string;
        attributes?: {
            ohlcv_list?: Array<Array<(number)>>;
        };
    };
    meta?: {
        base?: {
            address?: string;
            name?: string;
            symbol?: string;
            coingecko_coin_id?: string;
        };
        quote?: {
            address?: string;
            name?: string;
            symbol?: string;
            coingecko_coin_id?: string;
        };
    };
};

export type Trades = {
    data?: Array<{
        id?: string;
        type?: string;
        attributes?: {
            block_number?: number;
            tx_hash?: string;
            tx_from_address?: string;
            from_token_amount?: string;
            to_token_amount?: string;
            price_from_in_currency_token?: string;
            price_to_in_currency_token?: string;
            price_from_in_usd?: string;
            price_to_in_usd?: string;
            block_timestamp?: string;
            kind?: string;
            volume_in_usd?: string;
            from_token_address?: string;
            to_token_address?: string;
        };
    }>;
};

export type PingServerResponse = (Ping);

export type PingServerError = unknown;

export type ApiUsageResponse = (Key);

export type ApiUsageError = unknown;

export type SimplePriceData = {
    query: {
        /**
         * coins' ids, comma-separated if querying more than 1 coin.  <br>*refers to [`/coins/list`](/reference/coins-list).
         */
        ids: string;
        /**
         * include 24hr change, default: false
         */
        include_24hr_change?: boolean;
        /**
         * include 24hr volume, default: false
         */
        include_24hr_vol?: boolean;
        /**
         * include last updated price time in UNIX, default: false
         */
        include_last_updated_at?: boolean;
        /**
         * include market cap, default: false
         */
        include_market_cap?: boolean;
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * target currency of coins, comma-separated if querying more than 1 currency.  <br>*refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currencies: string;
    };
};

export type SimplePriceResponse = ({
    [key: string]: SimplePrice;
});

export type SimplePriceError = unknown;

export type SimpleTokenPriceData = {
    path: {
        /**
         * asset platform's id  <br>*refers to [`/asset_platforms`](/reference/asset-platforms-list).
         */
        id: string;
    };
    query: {
        /**
         * the contract addresses of tokens, comma-separated if querying more than 1 token's contract address
         */
        contract_addresses: string;
        /**
         * include 24hr change  default: false
         */
        include_24hr_change?: boolean;
        /**
         * include 24hr volume, default: false
         */
        include_24hr_vol?: boolean;
        /**
         * include last updated price time in UNIX , default: false
         */
        include_last_updated_at?: boolean;
        /**
         * include market capitalization, default: false
         */
        include_market_cap?: boolean;
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * target currency of coins, comma-separated if querying more than 1 currency.  <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currencies: string;
    };
};

export type SimpleTokenPriceResponse = ({
    '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'?: SimplePrice;
});

export type SimpleTokenPriceError = unknown;

export type SimpleSupportedCurrenciesResponse = (CurrencyList);

export type SimpleSupportedCurrenciesError = unknown;

export type CoinsListData = {
    query?: {
        /**
         * include platform and token's contract addresses, default: false
         */
        include_platform?: boolean;
        /**
         * filter by status of coins, default: active
         */
        status?: 'active' | 'inactive';
    };
};

export type CoinsListResponse = (CoinsList);

export type CoinsListError = unknown;

export type CoinsTopGainersLosersData = {
    query: {
        /**
         * filter result by time range <br> Default value: `24h`
         */
        duration?: '1h' | '24h' | '7d' | '14d' | '30d' | '60d' | '1y';
        /**
         * filter result by market cap ranking (top 300 to 1000) or all coins (including coins that do not have market cap)  <br> Default value: `1000`
         */
        top_coins?: 300 | 500 | 1000 | 'all';
        /**
         * target currency of coins  <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type CoinsTopGainersLosersResponse = (TopGainersLosers);

export type CoinsTopGainersLosersError = unknown;

export type CoinsListNewResponse = (CoinsListNew);

export type CoinsListNewError = unknown;

export type CoinsMarketsData = {
    query: {
        /**
         * filter based on coins' category <br> *refers to [`/coins/categories/list`](/reference/coins-categories-list).
         */
        category?: string;
        /**
         * coins' ids, comma-separated if querying more than 1 coin.  <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        ids?: string;
        /**
         * language background, default: en
         */
        locale?: 'ar' | 'bg' | 'cs' | 'da' | 'de' | 'el' | 'en' | 'es' | 'fi' | 'fr' | 'he' | 'hi' | 'hr' | 'hu' | 'id' | 'it' | 'ja' | 'ko' | 'lt' | 'nl' | 'no' | 'pl' | 'pt' | 'ro' | 'ru' | 'sk' | 'sl' | 'sv' | 'th' | 'tr' | 'uk' | 'vi' | 'zh' | 'zh-tw';
        /**
         * sort result by field, default: market_cap_desc
         */
        order?: 'market_cap_asc' | 'market_cap_desc' | 'volume_asc' | 'volume_desc' | 'id_asc' | 'id_desc';
        /**
         * page through results, default: 1
         */
        page?: number;
        /**
         * total results per page, default: 100 <br> Valid values: 1...250
         */
        per_page?: number;
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * include price change percentage timeframe, comma-separated if query more than 1 price change percentage timeframe <br> Valid values: 1h, 24h, 7d, 14d, 30d, 200d, 1y
         */
        price_change_percentage?: string;
        /**
         * include sparkline 7 days data, default: false
         */
        sparkline?: boolean;
        /**
         * target currency of coins and market data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type CoinsMarketsResponse = (CoinsMarkets);

export type CoinsMarketsError = unknown;

export type CoinsIdData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query?: {
        /**
         * include community data, default: true
         */
        community_data?: boolean;
        /**
         * include developer data, default: true
         */
        developer_data?: boolean;
        /**
         * include all the localized languages in the response, default: true
         */
        localization?: boolean;
        /**
         * include market data, default: true
         */
        market_data?: boolean;
        /**
         * include sparkline 7 days data, default: false
         */
        sparkline?: boolean;
        /**
         * include tickers data, default: true
         */
        tickers?: boolean;
    };
};

export type CoinsIdResponse = (CoinsID);

export type CoinsIdError = unknown;

export type CoinsIdTickersData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query?: {
        /**
         * include 2% orderbook depth, ie. `cost_to_move_up_usd` and `cost_to_move_down_usd` <br> default: false
         */
        depth?: boolean;
        /**
         * exchange id <br> *refers to [`/exchanges/list`](/reference/exchanges-list).
         */
        exchange_ids?: string;
        /**
         * include exchange logo, default: false
         */
        include_exchange_logo?: boolean;
        /**
         * use this to sort the order of responses, default: trust_score_desc
         */
        order?: 'trust_score_desc' | 'trust_score_asc' | 'volume_desc' | 'volume_asc';
        /**
         * page through results
         */
        page?: number;
    };
};

export type CoinsIdTickersResponse = (CoinsTickers);

export type CoinsIdTickersError = unknown;

export type CoinsIdHistoryData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * the date of data snapshot <br> Format: `dd-mm-yyyy`
         */
        date: string;
        /**
         * include all the localized languages in response, default: true
         */
        localization?: boolean;
    };
};

export type CoinsIdHistoryResponse = (CoinsHistoricalData);

export type CoinsIdHistoryError = unknown;

export type CoinsIdMarketChartData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days ago <br> you may use any integer or `max` for number of days
         */
        days: string;
        /**
         * data interval, leave empty for auto granularity
         */
        interval?: '5m' | 'hourly' | 'daily';
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * target currency of market data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type CoinsIdMarketChartResponse = (CoinsMarketChart);

export type CoinsIdMarketChartError = unknown;

export type CoinsIdMarketChartRangeData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * starting date in UNIX timestamp
         */
        from: number;
        /**
         * data interval, leave empty for auto granularity
         */
        interval?: '5m' | 'hourly' | 'daily';
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * ending date in UNIX timestamp
         */
        to: number;
        /**
         * target currency of market data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type CoinsIdMarketChartRangeResponse = (CoinsMarketChartRange);

export type CoinsIdMarketChartRangeError = unknown;

export type CoinsIdOhlcData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days ago
         */
        days: 1 | 7 | 14 | 30 | 90 | 180 | 365 | 'max';
        /**
         * data interval, leave empty for auto granularity
         */
        interval?: 'daily' | 'hourly';
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * target currency of price data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type CoinsIdOhlcResponse = (CoinsOHLC);

export type CoinsIdOhlcError = unknown;

export type CoinsIdOhlcRangeData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * starting date in UNIX timestamp
         */
        from: number;
        /**
         * data interval
         */
        interval: 'daily' | 'hourly';
        /**
         * ending date in UNIX timestamp
         */
        to: number;
        /**
         * target currency of price data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type CoinsIdOhlcRangeResponse = (CoinsOHLC);

export type CoinsIdOhlcRangeError = unknown;

export type CoinsContractAddressData = {
    path: {
        /**
         * the contract address of token
         */
        contract_address: string;
        /**
         * asset platform id <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list).
         */
        id: string;
    };
};

export type CoinsContractAddressResponse = (CoinsContractAddress);

export type CoinsContractAddressError = unknown;

export type ContractAddressMarketChartData = {
    path: {
        /**
         * the contract address of token
         */
        contract_address: string;
        /**
         * asset platform id <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days ago <br> you may use any integer or `max` for number of days
         */
        days: string;
        /**
         * data interval, leave empty for auto granularity
         */
        interval?: '5m' | 'hourly' | 'daily';
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * target currency of market data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type ContractAddressMarketChartResponse = (CoinsMarketChart);

export type ContractAddressMarketChartError = unknown;

export type ContractAddressMarketChartRangeData = {
    path: {
        /**
         * the contract address of token
         */
        contract_address: string;
        /**
         * asset platform id <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list)
         */
        id: string;
    };
    query: {
        /**
         * starting date in UNIX timestamp
         */
        from: number;
        /**
         * data interval, leave empty for auto granularity
         */
        interval?: '5m' | 'hourly' | 'daily';
        /**
         * decimal place for currency price value
         */
        precision?: 'full' | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
        /**
         * ending date in UNIX timestamp
         */
        to: number;
        /**
         * target currency of market data <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).
         */
        vs_currency: string;
    };
};

export type ContractAddressMarketChartRangeResponse = (CoinsMarketChartRange);

export type ContractAddressMarketChartRangeError = unknown;

export type CoinsIdCirculatingSupplyChartData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days ago  <br> Valid values: any integer or `max`
         */
        days: string;
        /**
         * data interval
         */
        interval?: 'daily';
    };
};

export type CoinsIdCirculatingSupplyChartResponse = (SupplyChartBase);

export type CoinsIdCirculatingSupplyChartError = unknown;

export type CoinsIdCirculatingSupplyChartRangeData = {
    path: {
        /**
         * coin id <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * starting date in UNIX timestamp
         */
        from: number;
        /**
         * ending date in UNIX timestamp
         */
        to: number;
    };
};

export type CoinsIdCirculatingSupplyChartRangeResponse = (SupplyChartBase);

export type CoinsIdCirculatingSupplyChartRangeError = unknown;

export type CoinsIdTotalSupplyChartData = {
    path: {
        /**
         * coin id  <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days ago  <br> Valid values: any integer or `max`
         */
        days: string;
        /**
         * data interval
         */
        interval?: 'daily';
    };
};

export type CoinsIdTotalSupplyChartResponse = (SupplyChartBase);

export type CoinsIdTotalSupplyChartError = unknown;

export type CoinsIdTotalSupplyChartRangeData = {
    path: {
        /**
         * coin id  <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        id: string;
    };
    query: {
        /**
         * starting date in UNIX timestamp
         */
        from: number;
        /**
         * ending date in UNIX timestamp
         */
        to: number;
    };
};

export type CoinsIdTotalSupplyChartRangeResponse = (SupplyChartBase);

export type CoinsIdTotalSupplyChartRangeError = unknown;

export type AssetPlatformsListData = {
    query?: {
        /**
         * apply relevant filters to results
         */
        filter?: 'nft';
    };
};

export type AssetPlatformsListResponse = (AssetPlatforms);

export type AssetPlatformsListError = unknown;

export type TokenListsData = {
    path: {
        /**
         * asset platform id <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list)
         */
        asset_platform_id: string;
    };
};

export type TokenListsResponse = (TokenLists);

export type TokenListsError = unknown;

export type CoinsCategoriesListResponse = (CategoriesList);

export type CoinsCategoriesListError = unknown;

export type CoinsCategoriesData = {
    query?: {
        /**
         * sort results by field, default: market_cap_desc
         */
        order?: 'market_cap_desc' | 'market_cap_asc' | 'name_desc' | 'name_asc' | 'market_cap_change_24h_desc' | 'market_cap_change_24h_asc';
    };
};

export type CoinsCategoriesResponse = (Categories);

export type CoinsCategoriesError = unknown;

export type ExchangesData = {
    query?: {
        /**
         * page through results, default: 1
         */
        page?: number;
        /**
         * total results per page, default: 100 <br> Valid values: 1...250
         */
        per_page?: number;
    };
};

export type ExchangesResponse = (Exchanges);

export type ExchangesError = unknown;

export type ExchangesListResponse = (ExchangesList);

export type ExchangesListError = unknown;

export type ExchangesIdData = {
    path: {
        /**
         * exchange id <br> *refers to [`/exchanges/list`](/reference/exchanges-list).
         */
        id: string;
    };
};

export type ExchangesIdResponse = (ExchangeData);

export type ExchangesIdError = unknown;

export type ExchangesIdTickersData = {
    path: {
        /**
         * exchange id <br> *refers to [`/exchanges/list`](/reference/exchanges-list).
         */
        id: string;
    };
    query?: {
        /**
         * filter tickers by coin_ids, comma-separated if querying more than 1 coin <br> *refers to [`/coins/list`](/reference/coins-list).
         */
        coin_ids?: string;
        /**
         * include 2% orderbook depth (Example: cost_to_move_up_usd & cost_to_move_down_usd),default: false
         */
        depth?: boolean;
        /**
         * include exchange logo, default: false
         */
        include_exchange_logo?: boolean;
        /**
         * use this to sort the order of responses, default: trust_score_desc
         */
        order?: 'trust_score_desc' | 'trust_score_asc' | 'volume_desc' | 'volume_asc';
        /**
         * page through results
         */
        page?: number;
    };
};

export type ExchangesIdTickersResponse = (ExchangeTickers);

export type ExchangesIdTickersError = unknown;

export type ExchangesIdVolumeChartData = {
    path: {
        /**
         * exchange id or derivatives exchange id <br> *refers to [`/exchanges/list`](/reference/exchanges-list) or [`/derivatives/exchanges/list`](/reference/derivatives-exchanges-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days ago
         */
        days: 1 | 7 | 14 | 30 | 90 | 180 | 365;
    };
};

export type ExchangesIdVolumeChartResponse = (ExchangeVolumeChart);

export type ExchangesIdVolumeChartError = unknown;

export type ExchangesIdVolumeChartRangeData = {
    path: {
        /**
         * exchange id or derivative exchange id <br> *refers to [`/exchanges/list`](/reference/exchanges-list) or [`/derivatives/exchanges/list`](/reference/derivatives-exchanges-list).
         */
        id: string;
    };
    query: {
        /**
         * starting date in UNIX timestamp
         */
        from: number;
        /**
         * ending date in UNIX timestamp
         */
        to: number;
    };
};

export type ExchangesIdVolumeChartRangeResponse = (ExchangeVolumeChart);

export type ExchangesIdVolumeChartRangeError = unknown;

export type DerivativesTickersResponse = (DerivativesTickersList);

export type DerivativesTickersError = unknown;

export type DerivativesExchangesData = {
    query?: {
        /**
         * use this to sort the order of responses, default: open_interest_btc_desc
         */
        order?: 'name_asc' | 'name_desc' | 'open_interest_btc_asc' | 'open_interest_btc_desc' | 'trade_volume_24h_btc_asc' | 'trade_volume_24h_btc_desc';
        /**
         * page through results, default: 1
         */
        page?: number;
        /**
         * total results per page
         */
        per_page?: number;
    };
};

export type DerivativesExchangesResponse = (DerivativesExchanges);

export type DerivativesExchangesError = unknown;

export type DerivativesExchangesIdData = {
    path: {
        /**
         * derivative exchange id <br> *refers to [`/derivatives/exchanges/list`](/reference/derivatives-exchanges-list).
         */
        id: string;
    };
    query?: {
        /**
         * include tickers data
         */
        include_tickers?: 'all' | 'unexpired';
    };
};

export type DerivativesExchangesIdResponse = (DerivativesExchangesID);

export type DerivativesExchangesIdError = unknown;

export type DerivativesExchangesListResponse = (DerivativesExchangesList);

export type DerivativesExchangesListError = unknown;

export type NftsListData = {
    query?: {
        /**
         * use this to sort the order of responses
         */
        order?: 'h24_volume_usd_asc' | 'h24_volume_usd_desc' | 'h24_volume_native_asc' | 'h24_volume_native_desc' | 'floor_price_native_asc' | 'floor_price_native_desc' | 'market_cap_native_asc' | 'market_cap_native_desc' | 'market_cap_usd_asc' | 'market_cap_usd_desc';
        /**
         * page through results
         */
        page?: number;
        /**
         * total results per page <br> Valid values: 1...250
         */
        per_page?: number;
    };
};

export type NftsListResponse = (NFTList);

export type NftsListError = unknown;

export type NftsIdData = {
    path: {
        /**
         * NFTs id <br> *refers to [`/nfts/list`](/reference/nfts-list).
         */
        id: string;
    };
};

export type NftsIdResponse = (NFTData);

export type NftsIdError = unknown;

export type NftsContractAddressData = {
    path: {
        /**
         * asset platform id <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list)
         */
        asset_platform_id: string;
        /**
         * the contract address of token
         */
        contract_address: string;
    };
};

export type NftsContractAddressResponse = (NFTData);

export type NftsContractAddressError = unknown;

export type NftsMarketsData = {
    query?: {
        /**
         * filter result by asset platform (blockchain network)  <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list) filter=`nft`
         */
        asset_platform_id?: string;
        /**
         * sort results by field  <br> Default: `market_cap_usd_desc`
         */
        order?: 'h24_volume_native_asc' | 'h24_volume_native_desc' | 'h24_volume_usd_asc' | 'h24_volume_usd_desc' | 'market_cap_usd_asc' | 'market_cap_usd_desc';
        /**
         * page through results  <br> Default: `1`
         */
        page?: number;
        /**
         * total results per page  <br> Valid values: any integer between 1 and 250  <br> Default: `100`
         */
        per_page?: number;
    };
};

export type NftsMarketsResponse = (NFTsMarkets);

export type NftsMarketsError = unknown;

export type NftsIdMarketChartData = {
    path: {
        /**
         * NFTs id <br> *refers to [`/nfts/list`](/reference/nfts-list).
         */
        id: string;
    };
    query: {
        /**
         * data up to number of days  <br> Valid values: any integer or max
         */
        days: string;
    };
};

export type NftsIdMarketChartResponse = (NFTMarketChart);

export type NftsIdMarketChartError = unknown;

export type NftsContractAddressMarketChartData = {
    path: {
        /**
         * asset platform id <br> *refers to [`/asset_platforms`](/reference/asset-platforms-list)
         */
        asset_platform_id: string;
        /**
         * contract address of the nft collection
         */
        contract_address: string;
    };
    query: {
        /**
         * data up to number of days ago <br> Valid values: any integer or max
         */
        days: string;
    };
};

export type NftsContractAddressMarketChartResponse = (NFTMarketChart);

export type NftsContractAddressMarketChartError = unknown;

export type NftsIdTickersData = {
    path: {
        /**
         * NFTs id <br> *refers to [`/nfts/list`](/reference/nfts-list).
         */
        id: string;
    };
};

export type NftsIdTickersResponse = (NFTTickers);

export type NftsIdTickersError = unknown;

export type ExchangeRatesResponse = (ExchangeRates);

export type ExchangeRatesError = unknown;

export type SearchDataData = {
    query: {
        /**
         * search query
         */
        query: string;
    };
};

export type SearchDataResponse = (Search);

export type SearchDataError = unknown;

export type TrendingSearchResponse = (TrendingSearch);

export type TrendingSearchError = unknown;

export type CryptoGlobalResponse = (Global);

export type CryptoGlobalError = unknown;

export type GlobalDeFiResponse = (GlobalDeFi);

export type GlobalDeFiError = unknown;

export type GlobalMarketCapChartData = {
    query: {
        /**
         * data up to number of days ago  <br>Valid values: any integer
         */
        days: 1 | 7 | 14 | 30 | 90 | 180 | 365 | 'max';
        /**
         * target currency of market cap, default: usd <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies)
         */
        vs_currency?: string;
    };
};

export type GlobalMarketCapChartResponse = (GlobalMarketCapChart);

export type GlobalMarketCapChartError = unknown;

export type CompaniesPublicTreasuryData = {
    path: {
        /**
         * coin id
         */
        coin_id: 'bitcoin' | 'ethereum';
    };
};

export type CompaniesPublicTreasuryResponse = (CompaniesTreasury);

export type CompaniesPublicTreasuryError = unknown;

export type OnchainSimplePriceData = {
    path: {
        /**
         * token contract address, comma-separated if more than one token contract address, max 30 addresses
         */
        addresses: string;
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
};

export type OnchainSimplePriceResponse = (SimplePrice1);

export type OnchainSimplePriceError = unknown;

export type NetworksListData = {
    query?: {
        /**
         * page through results <br> Default value: 1
         */
        page?: number;
    };
};

export type NetworksListResponse = (NetworksList);

export type NetworksListError = unknown;

export type DexesListData = {
    path: {
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * page through results <br> Default value: 1
         */
        page?: number;
    };
};

export type DexesListResponse = (DexesList);

export type DexesListError = unknown;

export type TrendingPoolsListData = {
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`, `network`.  <br> Example: `base_token` or `base_token,dex`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages  <br> Default value: 1
         */
        page?: number;
    };
};

export type TrendingPoolsListResponse = (Pool);

export type TrendingPoolsListError = unknown;

export type TrendingPoolsNetworkData = {
    path: {
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
    };
};

export type TrendingPoolsNetworkResponse = (Pool);

export type TrendingPoolsNetworkError = unknown;

export type PoolAddressData = {
    path: {
        /**
         * pool address
         */
        address: string;
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
    };
};

export type PoolAddressResponse = (Pool);

export type PoolAddressError = unknown;

export type PoolsAddressesData = {
    path: {
        /**
         * pool contract address, comma-separated if more than one pool contract address, maximum 30 addresses
         */
        addresses: string;
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
    };
};

export type PoolsAddressesResponse = (Pool);

export type PoolsAddressesError = unknown;

export type TopPoolsNetworkData = {
    path: {
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
        /**
         * sort the pools by field <br> Default value: h24_tx_count_desc
         */
        sort?: 'h24_tx_count_desc' | 'h24_volume_usd_desc';
    };
};

export type TopPoolsNetworkResponse = (Pool);

export type TopPoolsNetworkError = unknown;

export type TopPoolsDexData = {
    path: {
        /**
         * dex id <br> *refers to [/networks/{network}/dexes](/reference/dexes-list)
         */
        dex: string;
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
        /**
         * sort the pools by field <br> Default value: h24_tx_count_desc
         */
        sort?: 'h24_tx_count_desc' | 'h24_volume_usd_desc';
    };
};

export type TopPoolsDexResponse = (Pool);

export type TopPoolsDexError = unknown;

export type LatestPoolsNetworkData = {
    path: {
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
    };
};

export type LatestPoolsNetworkResponse = (Pool);

export type LatestPoolsNetworkError = unknown;

export type LatestPoolsListData = {
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`, `network`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
    };
};

export type LatestPoolsListResponse = (Pool);

export type LatestPoolsListError = unknown;

export type SearchPoolsData = {
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
        /**
         * search query
         */
        query?: string;
    };
};

export type SearchPoolsResponse = (Pool);

export type SearchPoolsError = unknown;

export type TopPoolsContractAddressData = {
    path: {
        /**
         * network id <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
        /**
         * token contract address
         */
        token_address: string;
    };
    query?: {
        /**
         * attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`
         */
        include?: string;
        /**
         * page through results, maximum 10 pages <br> Default value: 1
         */
        page?: number;
        /**
         * sort the pools by field <br> Default value: h24_volume_usd_liquidity_desc
         */
        sort?: 'h24_volume_usd_liquidity_desc' | 'h24_tx_count_desc' | 'h24_volume_usd_desc';
    };
};

export type TopPoolsContractAddressResponse = (Pool);

export type TopPoolsContractAddressError = unknown;

export type TokenDataContractAddressData = {
    path: {
        /**
         * token contract address
         */
        address: string;
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include
         */
        include?: 'top_pools';
    };
};

export type TokenDataContractAddressResponse = (Token);

export type TokenDataContractAddressError = unknown;

export type TokensDataContractAddressesData = {
    path: {
        /**
         * token contract address, comma-separated if more than one token contract address
         */
        addresses: string;
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
    query?: {
        /**
         * attributes to include
         */
        include?: 'top_pools';
    };
};

export type TokensDataContractAddressesResponse = (Token);

export type TokensDataContractAddressesError = unknown;

export type TokenInfoContractAddressData = {
    path: {
        /**
         * token contract address
         */
        address: string;
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
    };
};

export type TokenInfoContractAddressResponse = (TokenInfo);

export type TokenInfoContractAddressError = unknown;

export type PoolTokenInfoContractAddressData = {
    path: {
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
        /**
         * pool contract address
         */
        pool_address: string;
    };
};

export type PoolTokenInfoContractAddressResponse = (PoolTokensInfo);

export type PoolTokenInfoContractAddressError = unknown;

export type TokensInfoRecentUpdatedData = {
    query?: {
        /**
         * attributes to include
         */
        include?: 'network';
    };
};

export type TokensInfoRecentUpdatedResponse = (TokenInfoRecentlyUpdated);

export type TokensInfoRecentUpdatedError = unknown;

export type PoolOhlcvContractAddressData = {
    path: {
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
        /**
         * pool contract address
         */
        pool_address: string;
        /**
         * timeframe of the OHLCV chart
         */
        timeframe: 'day' | 'hour' | 'minute';
    };
    query?: {
        /**
         * time period to aggregate each OHLCV <br> Available values (day) : `1` <br> Available values (hour) : `1` , `4` , `12` <br> Available values (minute) : `1` , `5` , `15` <br> Default value: 1
         */
        aggregate?: string;
        /**
         * return ohlcv data before this timestamp (integer seconds since epoch)
         */
        before_timestamp?: number;
        /**
         * return ohlcv in USD or quote token  <br> Default value: usd
         */
        currency?: 'usd' | 'token';
        /**
         * number of ohlcv results to return, maximum 1000 <br> Default value: 100
         */
        limit?: number;
        /**
         * return ohlcv for token  <br> use this to invert the chart <br> Available values: 'base', 'quote' or token address
         */
        token?: string;
    };
};

export type PoolOhlcvContractAddressResponse = (OHLCV);

export type PoolOhlcvContractAddressError = unknown;

export type PoolTradesContractAddressData = {
    path: {
        /**
         * network id  <br> *refers to [/networks](/reference/networks-list)
         */
        network: string;
        /**
         * pool contract address
         */
        pool_address: string;
    };
    query?: {
        /**
         * filter trades by trade volume in USD greater than this value <br> Default value: 0
         */
        trade_volume_in_usd_greater_than?: number;
    };
};

export type PoolTradesContractAddressResponse = (Trades);

export type PoolTradesContractAddressError = unknown;